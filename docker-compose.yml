services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
      - '5555:5555'
      - '3002:3002'
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?schema=public
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://user:password@rabbitmq:5672
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/health || exit 1"]

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    ports:
      - '6379:6379'

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - '5672:5672'
      - '15672:15672'
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
  
  chat-consumer:
    build:
      context: .
    volumes:
      - .:/app
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
       RABBITMQ_URL: amqp://user:password@rabbitmq:5672
       DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?schema=public
    command: ["node", "dist/src/apps/consumers/chat-consumer/main.js"]

  database-consumer:
    build:
      context: .
    volumes:
      - .:/app
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
       RABBITMQ_URL: amqp://user:password@rabbitmq:5672
       DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?schema=public
    command: ["node", "dist/src/apps/consumers/database-consumer/main.js"]

  message-consumer:
    build:
      context: .
    volumes:
      - .:/app
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
       RABBITMQ_URL: amqp://user:password@rabbitmq:5672
       DATABASE_URL: postgres://postgres:password@postgres:5432/mydb?schema=public
    command: ["node", "dist/src/apps/consumers/message-consumer/main.js"]
volumes:
  postgres_data:
